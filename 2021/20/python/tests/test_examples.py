import unittest

import main


class ExampleTests(unittest.TestCase):

    def test_example(self):
        self.assertEqual(35, main.solve(

            main.parse_image(['#..#.',
                              '#....',
                              '##..#',
                              '..#..',
                              '..###'])))

    def test_1st_step_with_pixel_at_index_0(self):
        algorithm
        image = {(0, 0)}
        enhanced_image = main.enhance(algorithm, image, True)
        self.assertEqual(
            {(0, 0), (1, -1), (-1, 0), (1, 0), (0, -1)},
            enhanced_image)

    def test_2nd_step_with_pixel_at_index_0(self):
        algorithm
        image = {(0, 0), (1, -1), (-1, 0), (1, 0), (0, -1)}
        enhanced_image = main.enhance(algorithm, image, False)
        self.assertEqual(
            {(-1, -1), (-2, -2), (0, 0), (0, -1), (0, -2)},
            enhanced_image)
